<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/10/12
 * Time: 14:01
 */

namespace app\index\controller;


use app\common\controller\Pc;
use think\Db;
use think\helper\Time;

class User extends Pc
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if (session("user")) {
            $captcha = Db::name("user")->where(['id' => session("user.id")])->find();
            if (empty($captcha)) {
                session("user", null);
                exit($this->redirect("index/index"));
            } else {
                //判断当前用户是否已将完成验证注册
                $capchas = Db::name("send_email")->where(['account' => $captcha['email'], "state" => 2, "type" => 1])->count();
                if ($capchas < 1) {
                    exit($this->redirect("sign/email_login?uid=" . session("user.id")));
                }
            }
        } else {
            exit($this->redirect("index/index"));
        }
    }

    public function index()
    {
        return $this->fetch();
    }

    public function user_details()
    {
        //获取会员积分信息
        $data = Db::name("user_score")->where(['uid' => session("user.id")])->paginate(15);
        $this->assign("data", $data);
        $times = Time::month();
        $times = end($times);
        $expiry = Db::name("user_score")->where(['uid' => session("user.id"), "expiry_time" => ['<=', $times]])->sum("balance");

        $this->assign("expiry_score", $expiry);
        return $this->fetch();
    }
    public function user_blog(){
        $data = Db::name("blog_item")->where(['author'=>session("user.id")])->paginate(15);
        $res = $data->toArray()['data'];
        $this->assign(['data'=>$data,"result"=>$res]);
        return $this->fetch();
    }
    public function upload_user_icon()
    {
        if (!$this->request->isAjax() || !$this->request->isPost()) $this->error("非法数据提交方式！");
        $data = $this->request->param("files");
        if (empty($data)) $this->error("获取文件信息失败！");
        $url = upload_user_icon($data, session("user.id"));
        if (empty($url)) $this->error("文件上传失败！");
        //保存头像信息
        session("user.icon", $url);
        $da = Db::name("user_account")->where(['uid' => session("user.id")])->update(['icon' => $url]);
        if ($da === false) $this->error("上传文件失败");
        $this->success("文件上传成功！");
    }

    public function save_user_details()
    {
        if (!$this->request->isAjax() || !$this->request->isPost()) $this->error("非法数据提交方式！");
        $data = $this->request->param();
        if (empty($data)) $this->success("更新成功");
        if (!empty($data['birthday'])) $data['birthday'] = strtotime($data['birthday']);
        Db::startTrans();
        //判断是否已领取完善资料系统奖励积分
        $ds = Db::name("user_account")->where(['uid' => session("user.id")])->find();
        if ($ds['is_data_score'] != 1) {
            $data['score'] = $ds['score'] + 20;
            $data['is_data_score'] = 1;
            $time = Time::year();
            $time = end($time);
            $time = strtotime("+4 year", $time);
            $id = Db::name("user_score")->insertGetId([
                "uid" => session("user.id"),
                "expiry_time" => $time,
                "score" => 20,
                "balance" => 20,
                "remark" => "完善资料",
                "aTime" => time()
            ]);
            if ($id < 1) {
                Db::rollback();
                $this->error("更新失败！");
            }
        }
        $d = Db::name("user_account")->where(['uid' => session("user.id")])->update($data);
        if ($d === false) {
            Db::rollback();
            $this->error("更新失败！");
        }
        Db::commit();
        $this->success("更新成功");
    }
}